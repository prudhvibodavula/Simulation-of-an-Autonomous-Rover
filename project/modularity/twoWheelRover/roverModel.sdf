<?xml version='1.0'?>
<sdf version='1.4'>
  <model name="Rover">
    <static>false</static>
      <link name='chassis'>
        <pose>0 0 .1 0 0 0</pose>
 
        <collision name='collision'>
          <geometry>
            <box>
              <size>.4 .2 .1</size>
            </box>
          </geometry>
        </collision>
 
        <visual name='visual'>
          <geometry>
            <!--<box>
              <size>.4 .2 .1</size> -->
              <mesh>
                 <uri>model://pioneer3at/meshes/chassis.dae</uri>
                 <scale>0.9 0.7 0.5 </scale>
              </mesh>
            <!--</box>-->
          </geometry>
        </visual>
        <collision name='caster_collision'>
          <pose>-0.15 0 -0.05 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.05</radius>
            </sphere>
          </geometry>
 
          <surface>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1.0</slip1>
                <slip2>1.0</slip2>
              </ode>
            </friction>
          </surface>
        </collision>
 
        <visual name='caster_visual'>
          <pose>-0.15 0 -0.05 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.05</radius>
            </sphere>
          </geometry>
        </visual> 
      </link>
      <link name="left_wheel">
        <pose>0.1 0.13 0.1 0 1.5707 1.5707</pose>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.08</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </visual>
      </link>
      <link name="right_wheel">
        <pose>0.1 -0.13 0.1 0 1.5707 1.5707</pose>
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.08</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </visual>
      </link>
      
       <!-- Add the laser range finder -->
       <link name="laser_link">
         <inertial>
           <!-- Mass of the laser range finder in kg -->
           <mass>0.001</mass>
         </inertial>
         <!-- Position is towards the front of the robot -->
         <!-- Laser finder is mounted on top -->
         <pose>0.15 0 0.15 0 0 0</pose>
         
         <!-- Add a mesh to make it more visually appealing -->
         <visual name="visual">
           <geometry>
             <mesh>
               <uri>model://hokuyo/meshes/hokuyo.dae</uri>
             </mesh>
           </geometry>
         </visual>
         
         <!-- Collision properties of the base of the laser range finder-->
         <collision name="collision-base">
           <pose>0 0 -0.0145 0 0 0</pose>
           <geometry>
             <box>
               <size>0.05 0.05 0.041</size>
             </box>
           </geometry>
         </collision>
         <!-- Collision properties of the top of the laser range finder-->
         <collision name="collision-top">
           <pose>0 0 0.0205 0 0 0</pose>
           <geometry>
             <cylinder>
               <radius>0.021</radius>
               <length>0.029</length>
             </cylinder>
           </geometry>
         </collision>
         
         <!-- Describes the type and properties of the sensor -->
	 <sensor name="laser" type="ray">
	   <pose>0.01 0 0.0175 0 -0 0</pose>
           <ray>
             <scan>
               <horizontal>
                 <samples>181</samples>
                 <resolution>1</resolution>
                 <min_angle>-1.57080</min_angle>
                 <max_angle>1.57080</max_angle>
               </horizontal>
             </scan>
             <range>
               <min>0.08</min>
               <max>10</max>
               <resolution>0.05</resolution>
             </range>
           </ray>
           <always_on>1</always_on>
           <update_rate>10</update_rate>
           <visualize>true</visualize>

           <plugin name='laser' filename='libgazebo_ros_ray_sensor.so'>
             <ros>
               <namespace>/demo</namespace>
               <argument>--ros-args --remap ~/out:=scan</argument>
             </ros>
             <output_type>sensor_msgs/LaserScan</output_type>
           </plugin>
	 </sensor>
       </link>   
       
          <link name="camera_link">
  <pose>0.18 0 0.16 0 0 0</pose>

   
  <visual name="camera_visual">
    <pose>-0.005 0 0 0 0 0</pose>
    <geometry>
      <box>
        <size>0.015 0.08 0.022</size>
      </box>
    </geometry>
    <material>
      <ambient>0 0 0 1.0</ambient>
      <diffuse>0 0 0 1.0</diffuse>
      <specular>0.0 0.0 0.0 1.0</specular>
      <emissive>0.0 0.0 0.0 1.0</emissive>
    </material>
  </visual>    
   
  <sensor name="depth_camera" type="camera">
    <always_on>true</always_on>
    <visualize>true</visualize>
    <update_rate>5</update_rate>
    <camera name="camera">
      <horizontal_fov>1.02974</horizontal_fov>
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <clip>
        <near>0.02</near>
        <far>10</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
      <plugin name="depth_camera_controller" filename="libgazebo_ros_camera.so">
      <camera_name>depth_camera</camera_name>
      <frame_name>camera_depth_frame</frame_name>
      <hack_baseline>0</hack_baseline>
      <min_depth>0.001</min_depth>
    </plugin>
  </sensor>
  </link> 
  
      <joint type="fixed" name="camera_joint">
        <pose>0 0 0 0 0 0</pose>
        <child>camera_link</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>                         
             
      <joint type="revolute" name="left_wheel_hinge">
        <pose>0 0 -0.03 0 0 0</pose>
        <child>left_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
          </axis>
      </joint>
 
      <joint type="revolute" name="right_wheel_hinge">
        <pose>0 0 0.03 0 0 0</pose>
        <child>right_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>
      
       <!-- Connect laser range finder to the robot's body -->
       <joint type="fixed" name="laser_joint">
         <child>laser_link</child>
         <parent>chassis</parent>
       </joint>
       
       <!-- Controls the differential drive robot -->
       <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
         <ros>
           <namespace>/demo</namespace>
           <remapping>cmd_vel:=cmd_vel</remapping>
           <remapping>odom:=odom</remapping>
         </ros>

         <!-- wheels -->
         <left_joint>left_wheel_hinge</left_joint>
         <right_joint>right_wheel_hinge</right_joint>

         <!-- kinematics -->
         <wheel_separation>0.26</wheel_separation>
         <wheel_diameter>0.2</wheel_diameter>

         <!-- limits -->
         <max_wheel_torque>20</max_wheel_torque>
         <max_wheel_acceleration>1.0</max_wheel_acceleration>

         <!-- output -->
         <publish_odom>true</publish_odom>
         <publish_odom_tf>true</publish_odom_tf>
         <publish_wheel_tf>true</publish_wheel_tf>

         <odometry_frame>odom</odometry_frame>
         <robot_base_frame>chassis</robot_base_frame>
       </plugin>              
            
  </model>
</sdf>
